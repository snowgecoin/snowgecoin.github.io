{"version":3,"sources":["webpack://snowge/./src/components/nftShowcase/nftShowcase.js"],"names":["setValue","snowgeDonationAddress","snowgeNFTHolderAddress","snowgecoinGold","snowgecoinSilver","snowgecoinBronze","indaSnowge","nftABI","React","localStorage","getItem","account","setAccount","connected","setConnected","nftBalances","setNftBalances","canConnect","window","ethereum","forceUpdate","value","sendTransaction","amount","console","log","web3","Web3","transactionObject","from","to","eth","err","transactionHash","getRemainingTokens","nftContractAddress","Contract","methods","balanceOf","call","error","balance","updatedBalances","toString","checkAllRemainingCounts","interval","setInterval","clearInterval","className","href","id","src","alt","title","enterDelay","aria-label","target","style","color","onClick"],"mappings":"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","file":"46-c743c34f0896b3b265c7.js","sourcesContent":["import * as React from \"react\"\r\nimport './nftShowcase.scss'\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport discordIcon from \"../../images/teampics/discord.svg\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nfunction useForceUpdate(){\r\n    const [value, setValue] = React.useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\nconst NFTshowcase = () => {\r\n    const snowgeDonationAddress='0x45B223c01FdEAB85dd264A7363943dd7Ff434EcD';\r\n    const snowgeNFTHolderAddress='0x9c26915Afb65D9e5AEdE981ffA32431d0393058E';\r\n    const snowgecoinGold='0x2547017a1406963042c4481af1c0e2b85cbf84e6';\r\n    const snowgecoinSilver='0x2d9447f06ebdd6b26ea45de0d031c737f5f8fa12';\r\n    const snowgecoinBronze='0x928212ad37e0fdd0c6d84a5ac7b0c37efa17c668';\r\n    const indaSnowge='0x2b6383f13dd53af099029a954e8acaee76977956';\r\n    const nftABI = [\r\n      // balanceOf\r\n      {\r\n        \"constant\":true,\r\n        \"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\r\n        \"name\":\"balanceOf\",\r\n        \"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\r\n        \"type\":\"function\"\r\n      }\r\n    ]\r\n\r\n    const [account, setAccount] = React.useState(\r\n      localStorage.getItem(\"account\") || \"null\"\r\n    );\r\n    const [connected, setConnected] = React.useState(account != \"null\" && account != null && account != \"undefined\" || false);\r\n    const [nftBalances, setNftBalances] = React.useState({});\r\n    const canConnect = typeof window.ethereum !== \"undefined\";\r\n    const forceUpdate = useForceUpdate();\r\n\r\n    async function sendTransaction(amount) {\r\n        console.log('Starting transaction...');\r\n        const web3 = new window.Web3(window.ethereum);\r\n        console.log(account);\r\n\r\n        let transactionObject = {\r\n          from: account,\r\n          to: snowgeDonationAddress,\r\n          value: amount\r\n        }\r\n        console.log(transactionObject);\r\n\r\n        web3.eth.sendTransaction(transactionObject, function(err, transactionHash) {\r\n          if (err) {\r\n            console.log(err);\r\n          } else {\r\n            console.log(transactionHash);\r\n          }\r\n        });\r\n    }\r\n\r\n    function getRemainingTokens(account, nftContractAddress) {\r\n      if (canConnect) {\r\n        const web3 = new window.Web3(window.ethereum);\r\n        var contract = new web3.eth.Contract(nftABI, nftContractAddress);\r\n        contract.methods.balanceOf(account).call((error, balance) => {\r\n            if (balance) {\r\n              let updatedBalances = nftBalances;\r\n              updatedBalances[nftContractAddress] = balance;\r\n              setNftBalances(updatedBalances);\r\n              return balance.toString();\r\n            } else {\r\n              console.log(\"Error getting remaining NFT balance.\");\r\n              return \"0\";\r\n            }\r\n        });\r\n      }\r\n    }\r\n\r\n    function checkAllRemainingCounts() {\r\n      console.log('Checking number of remaining NFTs');\r\n      getRemainingTokens(snowgeNFTHolderAddress, snowgecoinGold);\r\n      getRemainingTokens(snowgeNFTHolderAddress, snowgecoinSilver);\r\n      getRemainingTokens(snowgeNFTHolderAddress, snowgecoinBronze);\r\n      getRemainingTokens(snowgeNFTHolderAddress, indaSnowge);\r\n      forceUpdate();\r\n      // console.log(nftBalances);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        setAccount(localStorage.getItem(\"account\"))\r\n        setConnected(localStorage.getItem(\"account\") != \"null\" && localStorage.getItem(\"account\") != null && localStorage.getItem(\"account\") != 'undefined')\r\n        if (connected) {\r\n          checkAllRemainingCounts();\r\n        }\r\n      }, 3000);\r\n      return () => clearInterval(interval);\r\n      checkAllRemainingCounts();\r\n    }, []);\r\n\r\n    return (\r\n      <div className={'flex-column nft-grid-container'}>\r\n          <div className={'nft-grid-title slightly-bolder'}>Snowge NFTs\r\n            <br className=\"break\"/>\r\n            <Button href=\"#series0\" className={'series-button'}>Series 0</Button>\r\n            <Button href=\"#series1\" className={'series-button'}>Series 1</Button>\r\n          </div>\r\n          <div className={'nft-grid-subtitle slightly-bolder'} id=\"series0\">Series 0: Donor Awards!</div>\r\n          <div><b>Note</b>: Purchased NFT Rewards will be sent directly to the purchaser's wallet address within 24-48 hours (typically much sooner).</div>\r\n          <div className={'flex-row x-centre wrap'}>\r\n              <div className={'nft-card flex-column'}>\r\n                  <img src=\"https://snowge.s3.amazonaws.com/snowgecoin.gif\" alt={'SnowgeCoin Gold'} className={'nft-pic'}/>\r\n                  <div className={'nft-card-content'}>\r\n                      <div className={'slightly-bolder'}>SnowgeCoinV1 (Gold)</div>\r\n                      <div className={'flex-row wrap'}>\r\n                          <div className={'small-font'}>The very first round of Snowge NFTs, minted for the dev team and 3 lucky donors! These NFT's are rare - they are the first to include a beta version of the \"pet your floof\" functionality.\r\n                            <div className={'small-font slightly-bolder up-space'}>Floofyness: 100</div>\r\n                            <div className={'small-font slightly-bolder'}>Artist: BongChild</div>\r\n                            <div className={'small-font slightly-bolder'}>Remaining: {nftBalances[snowgecoinGold] || \"?\"}</div>\r\n                          </div>\r\n                          <span className={'flex-spacer'}></span>\r\n                          <Tooltip title=\"Minted\" enterDelay={600} className={'mint-button'}>\r\n                              <IconButton aria-label=\"Minted\" href=\"https://bscscan.com/token/0x2547017a1406963042c4481af1c0e2b85cbf84e6\"\r\n                                          target=\"_blank\"\r\n                                          style={{color: '#0F4395'}}>16\r\n                              </IconButton>\r\n                          </Tooltip>\r\n                      </div>\r\n                      <div className={'flex-row wrap give-height'}>\r\n                        {connected && !nftBalances[snowgecoinGold] && <Button className={'unavailable-button'}>loading...</Button>}\r\n                        {connected && nftBalances[snowgecoinGold] <= 0 && <Button className={'sold-out-button'}>Sold out!</Button>}\r\n                        {connected && nftBalances[snowgecoinGold] > 0 && <Button className={'buy-nft-button'} onClick={() => sendTransaction(1000000000000000000)}>Purchase</Button>}\r\n                        {!connected && <Button className={'unavailable-button'}>Connect Wallet</Button>}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className={'nft-card flex-column'}>\r\n                  <img src=\"https://snowge.s3.amazonaws.com/silvercoin.gif\" alt={'SnowgeCoin Silver'} className={'nft-pic'}/>\r\n                  <div className={'nft-card-content'}>\r\n                      <div className={'slightly-bolder'}>SnowgeCoinV2 (Silver)</div>\r\n                      <div className={'flex-row'}>\r\n                          <div className={'small-font'}>The second round of Snowge NFTs, minted for donors who contribute at least 0.25 BNB or $100 BUSD! These NFT's include an upgraded version of the \"pet your floof\" functionality.\r\n                            <div className={'small-font slightly-bolder up-space'}>Floofyness: 25</div>\r\n                            <div className={'small-font slightly-bolder'}>Artist: BongChild</div>\r\n                            <div className={'small-font slightly-bolder'}>Remaining: {nftBalances[snowgecoinSilver] || \"?\"}</div>\r\n                          </div>\r\n                          <span className={'flex-spacer'}></span>\r\n                          <Tooltip title=\"Minted\" enterDelay={600} className={'mint-button'}>\r\n                              <IconButton aria-label=\"Minted\" href=\"https://bscscan.com/token/0x2d9447f06ebdd6b26ea45de0d031c737f5f8fa12\"\r\n                                          target=\"_blank\"\r\n                                          style={{color: '#0F4395'}}>32\r\n                              </IconButton>\r\n                          </Tooltip>\r\n                      </div>\r\n                      <div className={'flex-row wrap give-height'}>\r\n                        {connected && !nftBalances[snowgecoinGold] && <Button className={'unavailable-button'}>loading...</Button>}\r\n                        {connected && nftBalances[snowgecoinSilver] <= 0 && <Button className={'sold-out-button'}>Sold out!</Button>}\r\n                        {connected && nftBalances[snowgecoinSilver] > 0 && <Button className={'buy-nft-button'} onClick={() => sendTransaction(250000000000000000)}>Purchase</Button>}\r\n                        {!connected && <Button className={'unavailable-button'}>Connect Wallet</Button>}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className={'nft-card flex-column'}>\r\n                  <img src=\"https://snowge.s3.amazonaws.com/bronzecoin.gif\" alt={'SnowgeCoin Bronze'} className={'nft-pic'}/>\r\n                  <div className={'nft-card-content'}>\r\n                      <div className={'slightly-bolder'}>SnowgeCoinV2 (Bronze)</div>\r\n                      <div className={'flex-row wrap'}>\r\n                          <div className={'small-font'}>The second round of Snowge NFTs, minted for donors who contribute at least 0.1 BNB or $50 BUSD! These NFT's include an upgraded version of the \"pet your floof\" functionality.\r\n                            <div className={'small-font slightly-bolder up-space'}>Floofyness: 10</div>\r\n                            <div className={'small-font slightly-bolder'}>Artist: BongChild</div>\r\n                            <div className={'small-font slightly-bolder'}>Remaining: {nftBalances[snowgecoinBronze] || \"?\"}</div>\r\n                          </div>\r\n                          <span className={'flex-spacer'}></span>\r\n                          <Tooltip title=\"Minted\" enterDelay={600} className={'mint-button'}>\r\n                              <IconButton aria-label=\"Minted\" href=\"https://bscscan.com/token/0x928212ad37e0fdd0c6d84a5ac7b0c37efa17c668\"\r\n                                          target=\"_blank\"\r\n                                          style={{color: '#0F4395'}}>64\r\n                              </IconButton>\r\n                          </Tooltip>\r\n                      </div>\r\n                      <div className={'flex-row wrap give-height'}>\r\n                        {connected && !nftBalances[snowgecoinGold] && <Button className={'unavailable-button'}>loading...</Button>}\r\n                        {connected && nftBalances[snowgecoinBronze] <= 0 && <Button className={'sold-out-button'}>Sold out!</Button>}\r\n                        {connected && nftBalances[snowgecoinBronze] > 0 && <Button className={'buy-nft-button'} onClick={() => sendTransaction(100000000000000000)}>Purchase</Button>}\r\n                        {!connected && <Button className={'unavailable-button'}>Connect Wallet</Button>}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div className={'team-grid-subtitle slightly-bolder'} id=\"series1\">Series 1: Limited Edition Snowge Trading Cards!</div>\r\n          <div className={'flex-row x-centre wrap'}>\r\n              <div className={'nft-card flex-column'}>\r\n                  <img src=\"https://snowge.s3.amazonaws.com/Indagifsmol.gif\" alt={'IndaSnowge'} className={'nft-pic'}/>\r\n                  <div className={'nft-card-content'}>\r\n                      <div className={'slightly-bolder'}>IndaSnowge</div>\r\n                      <div className={'flex-row wrap'}>\r\n                          <div className={'small-font'}>A limited edition NFT created for the SnowgeCoin + IndaSwap partnership! Only 10 minted. Will be given out as prizes during various SnowgeCoin + IndaSwap marketing events.\r\n                            <div className={'small-font slightly-bolder up-space'}>Floofyness: 100</div>\r\n                            <div className={'small-font slightly-bolder'}>Artist: BongChild & Momori</div>\r\n                            <div className={'small-font slightly-bolder'}>Remaining: {nftBalances[indaSnowge] || \"?\"}</div>\r\n                          </div>\r\n                          <span className={'flex-spacer'}></span>\r\n                          <Tooltip title=\"Minted\" enterDelay={600} className={'mint-button'}>\r\n                              <IconButton aria-label=\"Minted\" href=\"https://bscscan.com/token/0x2b6383f13dd53af099029a954e8acaee76977956\"\r\n                                          target=\"_blank\"\r\n                                          style={{color: '#0F4395'}}>10\r\n                              </IconButton>\r\n                          </Tooltip>\r\n                      </div>\r\n                      <div className={'flex-row wrap give-height'}>\r\n                        <Button className={'unavailable-button'}>Unavailable</Button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default NFTshowcase\r\n"],"sourceRoot":""}