{"version":3,"sources":["webpack://snowge/./src/components/nftShowcase/nftShowcase.js"],"names":["snowgeDonationAddress","snowgeNFTHolderAddress","snowgecoinGold","snowgecoinSilver","snowgecoinBronze","indaSnowge","nftABI","React","localStorage","getItem","account","setAccount","nftBalances","setNftBalances","canConnect","window","ethereum","sendTransaction","amount","console","log","web3","Web3","transactionObject","from","to","value","eth","err","transactionHash","getRemainingTokens","nftContractAddress","Contract","methods","balanceOf","call","error","balance","updatedBalances","toString","connected","setConnected","interval","setInterval","clearInterval","className","href","id","src","alt","title","enterDelay","aria-label","target","style","color","onClick"],"mappings":"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","file":"46-be5d906bbfcba535828f.js","sourcesContent":["import * as React from \"react\"\nimport './nftShowcase.scss'\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport discordIcon from \"../../images/teampics/discord.svg\";\nimport {Helmet} from \"react-helmet\";\n\nconst NFTshowcase = () => {\n    const snowgeDonationAddress='0x9c26915Afb65D9e5AEdE981ffA32431d0393058E';\n    const snowgeNFTHolderAddress='0x9c26915Afb65D9e5AEdE981ffA32431d0393058E';\n    const snowgecoinGold='0x2547017a1406963042c4481af1c0e2b85cbf84e6';\n    const snowgecoinSilver='0x2d9447f06ebdd6b26ea45de0d031c737f5f8fa12';\n    const snowgecoinBronze='0x928212ad37e0fdd0c6d84a5ac7b0c37efa17c668';\n    const indaSnowge='0xc2a54b5937f3ba1d81659f1d53eec7fa05cd108e';\n    const nftABI = [\n      // balanceOf\n      {\n        \"constant\":true,\n        \"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\n        \"name\":\"balanceOf\",\n        \"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\n        \"type\":\"function\"\n      }\n    ]\n\n    const [account, setAccount] = React.useState(\n      localStorage.getItem(\"account\") || ''\n    );\n    const [nftBalances, setNftBalances] = React.useState({});\n    const canConnect = typeof window.ethereum !== \"undefined\";\n\n    async function sendTransaction(amount) {\n        console.log('Starting transaction...');\n        const web3 = new window.Web3(window.ethereum);\n        console.log(account);\n\n        let transactionObject = {\n          from: account,\n          to: snowgeDonationAddress,\n          value: amount\n        }\n        console.log(transactionObject);\n\n        web3.eth.sendTransaction(transactionObject, function(err, transactionHash) {\n          if (err) {\n            console.log(err);\n          } else {\n            console.log(transactionHash);\n          }\n        });\n    }\n\n    function getRemainingTokens(account, nftContractAddress) {\n      if (canConnect) {\n        const web3 = new window.Web3(window.ethereum);\n        var contract = new web3.eth.Contract(nftABI, nftContractAddress);\n        contract.methods.balanceOf(account).call((error, balance) => {\n            if (balance) {\n              let updatedBalances = nftBalances;\n              updatedBalances[nftContractAddress] = balance;\n              setNftBalances(updatedBalances);\n              return balance.toString();\n            } else {\n              console.log(\"Error getting remaining NFT balance.\");\n              return \"0\";\n            }\n        });\n      }\n    }\n\n    const [connected, setConnected] = React.useState(account != \"\" || false);\n\n    React.useEffect(() => {\n      const interval = setInterval(() => {\n        setAccount(localStorage.getItem(\"account\"))\n        setConnected(localStorage.getItem(\"account\") != \"\")\n        if (connected) {\n          console.log('Checking number of remaining NFTs');\n          getRemainingTokens(snowgeNFTHolderAddress, snowgecoinGold);\n          getRemainingTokens(snowgeNFTHolderAddress, snowgecoinSilver);\n          getRemainingTokens(snowgeNFTHolderAddress, snowgecoinBronze);\n          getRemainingTokens(snowgeNFTHolderAddress, indaSnowge);\n          console.log(nftBalances);\n        }\n      }, 10000);\n      return () => clearInterval(interval);\n      console.log('Checking number of remaining NFTs');\n      getRemainingTokens(snowgeNFTHolderAddress, snowgecoinGold);\n      getRemainingTokens(snowgeNFTHolderAddress, snowgecoinSilver);\n      getRemainingTokens(snowgeNFTHolderAddress, snowgecoinBronze);\n      getRemainingTokens(snowgeNFTHolderAddress, indaSnowge);\n      console.log(nftBalances);\n    }, []);\n\n    return (\n      <div className={'flex-column nft-grid-container'}>\n          <div className={'nft-grid-title slightly-bolder'}>Snowge NFTs\n            <br className=\"break\"/>\n            <Button href=\"#series0\" className={'series-button'}>Series 0</Button>\n            <Button href=\"#series1\" className={'series-button'}>Series 1</Button>\n          </div>\n          <div className={'nft-grid-subtitle slightly-bolder'} id=\"series0\">Series 0: Donor Awards!</div>\n          <div><b>Note</b>: Purchased NFT Rewards will be sent directly to the purchaser's wallet address within 24-48 hours (typically much sooner).</div>\n          <div className={'flex-row x-centre wrap'}>\n              <div className={'nft-card flex-column'}>\n                  <img src=\"https://snowge.s3.amazonaws.com/snowgecoin.gif\" alt={'SnowgeCoin Gold'} className={'nft-pic'}/>\n                  <div className={'nft-card-content'}>\n                      <div className={'slightly-bolder'}>SnowgeCoinV1 (Gold)</div>\n                      <div className={'flex-row wrap'}>\n                          <div className={'small-font'}>The very first round of Snowge NFTs, minted for the dev team and 3 lucky donors! These NFT's are rare - they are the first to include a beta version of the \"pet your floof\" functionality.\n                            <div className={'small-font slightly-bolder up-space'}>Floofyness: 100</div>\n                            <div className={'small-font slightly-bolder'}>Artist: BongChild</div>\n                            <div className={'small-font slightly-bolder'}>Remaining: {nftBalances[snowgecoinGold] || \"?\"}</div>\n                          </div>\n                          <span className={'flex-spacer'}></span>\n                          <Tooltip title=\"Minted\" enterDelay={600} className={'mint-button'}>\n                              <IconButton aria-label=\"Minted\" href=\"https://bscscan.com/token/0x2547017a1406963042c4481af1c0e2b85cbf84e6\"\n                                          target=\"_blank\"\n                                          style={{color: '#0F4395'}}>16\n                              </IconButton>\n                          </Tooltip>\n                      </div>\n                      <div className={'flex-row wrap give-height'}>\n                        {connected && !nftBalances[snowgecoinGold] && <Button className={'unavailable-button'}>loading...</Button>}\n                        {connected && nftBalances[snowgecoinGold] <= 0 && <Button className={'sold-out-button'}>Sold out!</Button>}\n                        {connected && nftBalances[snowgecoinGold] > 0 && <Button className={'buy-nft-button'} onClick={() => sendTransaction(1000000000000000000)}>Purchase</Button>}\n                        {!connected && <Button className={'unavailable-button'}>Connect Wallet</Button>}\n                      </div>\n                  </div>\n              </div>\n              <div className={'nft-card flex-column'}>\n                  <img src=\"https://snowge.s3.amazonaws.com/silvercoin.gif\" alt={'SnowgeCoin Silver'} className={'nft-pic'}/>\n                  <div className={'nft-card-content'}>\n                      <div className={'slightly-bolder'}>SnowgeCoinV2 (Silver)</div>\n                      <div className={'flex-row'}>\n                          <div className={'small-font'}>The second round of Snowge NFTs, minted for donors who contribute at least 0.25 BNB or $100 BUSD! These NFT's include an upgraded version of the \"pet your floof\" functionality.\n                            <div className={'small-font slightly-bolder up-space'}>Floofyness: 25</div>\n                            <div className={'small-font slightly-bolder'}>Artist: BongChild</div>\n                            <div className={'small-font slightly-bolder'}>Remaining: {nftBalances[snowgecoinSilver] || \"?\"}</div>\n                          </div>\n                          <span className={'flex-spacer'}></span>\n                          <Tooltip title=\"Minted\" enterDelay={600} className={'mint-button'}>\n                              <IconButton aria-label=\"Minted\" href=\"https://bscscan.com/token/0x2d9447f06ebdd6b26ea45de0d031c737f5f8fa12\"\n                                          target=\"_blank\"\n                                          style={{color: '#0F4395'}}>32\n                              </IconButton>\n                          </Tooltip>\n                      </div>\n                      <div className={'flex-row wrap give-height'}>\n                        {connected && !nftBalances[snowgecoinGold] && <Button className={'unavailable-button'}>loading...</Button>}\n                        {connected && nftBalances[snowgecoinSilver] <= 0 && <Button className={'sold-out-button'}>Sold out!</Button>}\n                        {connected && nftBalances[snowgecoinSilver] > 0 && <Button className={'buy-nft-button'} onClick={() => sendTransaction(250000000000000000)}>Purchase</Button>}\n                        {!connected && <Button className={'unavailable-button'}>Connect Wallet</Button>}\n                      </div>\n                  </div>\n              </div>\n              <div className={'nft-card flex-column'}>\n                  <img src=\"https://snowge.s3.amazonaws.com/bronzecoin.gif\" alt={'SnowgeCoin Bronze'} className={'nft-pic'}/>\n                  <div className={'nft-card-content'}>\n                      <div className={'slightly-bolder'}>SnowgeCoinV2 (Bronze)</div>\n                      <div className={'flex-row wrap'}>\n                          <div className={'small-font'}>The second round of Snowge NFTs, minted for donors who contribute at least 0.1 BNB or $50 BUSD! These NFT's include an upgraded version of the \"pet your floof\" functionality.\n                            <div className={'small-font slightly-bolder up-space'}>Floofyness: 10</div>\n                            <div className={'small-font slightly-bolder'}>Artist: BongChild</div>\n                            <div className={'small-font slightly-bolder'}>Remaining: {nftBalances[snowgecoinBronze] || \"?\"}</div>\n                          </div>\n                          <span className={'flex-spacer'}></span>\n                          <Tooltip title=\"Minted\" enterDelay={600} className={'mint-button'}>\n                              <IconButton aria-label=\"Minted\" href=\"https://bscscan.com/token/0x928212ad37e0fdd0c6d84a5ac7b0c37efa17c668\"\n                                          target=\"_blank\"\n                                          style={{color: '#0F4395'}}>64\n                              </IconButton>\n                          </Tooltip>\n                      </div>\n                      <div className={'flex-row wrap give-height'}>\n                        {connected && !nftBalances[snowgecoinGold] && <Button className={'unavailable-button'}>loading...</Button>}\n                        {connected && nftBalances[snowgecoinBronze] <= 0 && <Button className={'sold-out-button'}>Sold out!</Button>}\n                        {connected && nftBalances[snowgecoinBronze] > 0 && <Button className={'buy-nft-button'} onClick={() => sendTransaction(100000000000000000)}>Purchase</Button>}\n                        {!connected && <Button className={'unavailable-button'}>Connect Wallet</Button>}\n                      </div>\n                  </div>\n              </div>\n          </div>\n          <div className={'team-grid-subtitle slightly-bolder'} id=\"series1\">Series 1: Limited Edition Snowge Trading Cards!</div>\n          <div className={'flex-row x-centre wrap'}>\n              <div className={'nft-card flex-column'}>\n                  <img src=\"https://snowge.s3.amazonaws.com/Indagifsmol.gif\" alt={'IndaSnowge'} className={'nft-pic'}/>\n                  <div className={'nft-card-content'}>\n                      <div className={'slightly-bolder'}>IndaSnowge</div>\n                      <div className={'flex-row wrap'}>\n                          <div className={'small-font'}>A limited edition NFT created for the SnowgeCoin + IndaSwap partnership! Only 10 minted. Will be given out as prizes during various SnowgeCoin + IndaSwap marketing events.\n                            <div className={'small-font slightly-bolder up-space'}>Floofyness: 100</div>\n                            <div className={'small-font slightly-bolder'}>Artist: BongChild & Momori</div>\n                            <div className={'small-font slightly-bolder'}>Remaining: {nftBalances[indaSnowge] || \"?\"}</div>\n                          </div>\n                          <span className={'flex-spacer'}></span>\n                          <Tooltip title=\"Minted\" enterDelay={600} className={'mint-button'}>\n                              <IconButton aria-label=\"Minted\" href=\"https://bscscan.com/token/0xc2a54b5937f3ba1d81659f1d53eec7fa05cd108e\"\n                                          target=\"_blank\"\n                                          style={{color: '#0F4395'}}>10\n                              </IconButton>\n                          </Tooltip>\n                      </div>\n                      <div className={'flex-row wrap give-height'}>\n                        <Button className={'unavailable-button'}>Unavailable</Button>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    )\n};\n\nexport default NFTshowcase\n"],"sourceRoot":""}